@use '@global' as global-tokens;

:root {
    // Print all token values as CSS variables
    // Borders
    --spirit-border-style-none: #{global-tokens.$border-style-none};
    --spirit-border-style-solid: #{global-tokens.$border-style-solid};
    --spirit-border-style-dashed: #{global-tokens.$border-style-dashed};
    --spirit-border-width-0: #{global-tokens.$border-width-0};
    --spirit-border-width-100: #{global-tokens.$border-width-100};
    --spirit-border-width-200: #{global-tokens.$border-width-200};

    // Measures
    @each $space-name, $space-value in global-tokens.$spaces {
        --spirit-space-#{$space-name}: #{$space-value};
    }

    // Other
    /// Containers
    @each $container-name, $container-value in global-tokens.$containers {
        --spirit-container-#{$container-name}: #{$container-value};
    }

    /// Grids
    @each $grid-name, $grid-value in global-tokens.$grids {
        --spirit-grid-#{$grid-name}: #{$grid-value};
    }

    /// Container paddings
    @each $container-padding-name, $container-padding-value in global-tokens.$container-paddings {
        --spirit-container-padding-#{$container-padding-name}: #{$container-padding-value};
    }

    /// Grid gutters
    @each $grid-gutter-name, $grid-gutter-value in global-tokens.$grid-gutters {
        --spirit-grid-gutter-#{$grid-gutter-name}: #{$grid-gutter-value};
    }

    /// Breakpoints
    @each $breakpoint-name, $breakpoint-value in global-tokens.$breakpoints {
        --spirit-breakpoint-#{$breakpoint-name}: #{$breakpoint-value};
    }

    // Radii
    @each $radius-name, $radius-value in global-tokens.$radii {
        --spirit-radius-#{$radius-name}: #{$radius-value};
    }

    // Typography
    @each $style-name, $style-value in global-tokens.$styles {
        @each $breakpoint-name, $breakpoint-value in $style-value {
            @each $property-name, $property-value in $breakpoint-value {
                --spirit-typography-#{$style-name}-#{$breakpoint-name}-#{$property-name}: #{$property-value};
            }
        }
    }
}
