// When oklch() is supported by the browser, we can use it to generate dynamic colors.
// Dynamic colors are based on the `--spirit-local-background-color` variable, which is set by utility classes like
// `bg-secondary` or `bg-emotion-success-basic`. If `--spirit-local-background-color` is not available, transparent
// color is used by the browser.
//
// @see https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/oklch

@use '@tokens' as tokens;

// Constants for dynamic color generation are fine-tuned for the default light Spirit theme.
// New design tokens may be added in the future to replace the constants and allow for theme-based customization.
$_lightness-delta-border: 0.75;
$_lightness-delta-background-state-hover: 0.3;
$_lightness-delta-background-state-active: 0.45;
$_lightness-delta-background-selected: 0.3;
$_chroma-scale-border: 2;
$_chroma-scale-background-state-hover: 4;
$_chroma-scale-background-state-active: 4;
$_chroma-scale-background-selected: 4;

// Function to generate dynamic color based on an input color.
// - The lightness term smoothly moves any color toward the mid tone `$_lightness-midpoint`, making light colors darker and dark colors lighter.
// - The chroma term scales saturation up for light colors and down for dark colors, proportional to distance from the midpoint `$_chroma-lightness-midpoint`,
//   so itâ€™s subtle near the midpoint and stronger at the extremes.
//
// Parameters are:
// * $color: the base color to alter
// * $lightness-delta: number <0, 1>, lightness change, higher = stronger darken/lighten effect
// * $chroma-scale: number, chroma change, higher = more saturation change
@function alter-color($color, $lightness-delta, $chroma-scale) {
    $_lightness-midpoint: 0.8; // number <0, 1>, light/dark threshold for lightness, higher = lighter colors are considered dark
    $_chroma-lightness-midpoint: 0.5; // number <0, 1>, light/dark threshold for chroma, lower = more saturation for dark colors
    $_chroma-upper-limit: 0.2; // number <0, 0.4>, higher = more saturation for dark colors

    @return oklch(
        from #{$color} calc(l + #{$lightness-delta} * (#{$_lightness-midpoint} - l))
            clamp(0, calc(c * (1 + #{$chroma-scale} * (l - #{$_chroma-lightness-midpoint}))), #{$_chroma-upper-limit}) h
    );
}

// Mixin to generate dynamic border color.
@mixin border {
    @supports (color: oklch(from red l c h)) {
        border-color: alter-color(
            $color: var(--#{tokens.$css-variable-prefix}local-background-color),
            $lightness-delta: $_lightness-delta-border,
            $chroma-scale: $_chroma-scale-border
        );
    }
}

// Mixin to generate dynamic background colors for interactive states.
@mixin background-interactive {
    @supports (color: oklch(from red l c h)) {
        --#{tokens.$css-variable-prefix}local-background-color-state-hover: #{alter-color(
                $color: var(--#{tokens.$css-variable-prefix}local-background-color),
                $lightness-delta: $_lightness-delta-background-state-hover,
                $chroma-scale: $_chroma-scale-background-state-hover
            )};
        --#{tokens.$css-variable-prefix}local-background-color-state-active: #{alter-color(
                $color: var(--#{tokens.$css-variable-prefix}local-background-color),
                $lightness-delta: $_lightness-delta-background-state-active,
                $chroma-scale: $_chroma-scale-background-state-active
            )};

        @media (hover: hover) {
            &:hover {
                background-color: var(--#{tokens.$css-variable-prefix}local-background-color-state-hover);
            }
        }

        &:active {
            background-color: var(--#{tokens.$css-variable-prefix}local-background-color-state-active);
        }
    }
}

// Mixin to generate dynamic background color for selected items.
@mixin background-selected {
    @supports (color: oklch(from red l c h)) {
        background-color: alter-color(
            $color: var(--#{tokens.$css-variable-prefix}local-background-color),
            $lightness-delta: $_lightness-delta-background-selected,
            $chroma-scale: $_chroma-scale-background-selected
        );
    }
}
