@use 'true' as test;
@use '../tokens';
@use '@tokens' as generated-tokens;

$test-theme: (
    action: (
        button: (
            active: #fff,
        ),
    ),
);

@include test.describe('generate-css-variables mixin') {
    @include test.it('should generate CSS variables based on the provided map') {
        @include test.assert() {
            @include test.output() {
                :root {
                    @include tokens.generate-css-variables($map: $test-theme, $prefix: 'test');
                }
            }

            @include test.expect() {
                :root {
                    --test-action-button-active: #fff;
                }
            }
        }
    }
}

@include test.describe('get-variable-if-exists function') {
    @include test.it('should return the variable that exists in the tokens') {
        @include test.assert-equal(
            tokens.get-variable-if-exists('container-max-width', generated-tokens.$container-max-width),
            generated-tokens.$container-max-width
        );
    }

    @include test.it('should return the default variable') {
        @include test.assert-equal(tokens.get-variable-if-exists('new-variable-max-width', '0px'), '0px');
    }
}
