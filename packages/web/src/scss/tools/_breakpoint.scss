// Mixin to get the min-width media query for a breakpoint value.
//
// Example: up(0) { … } will return …
// Example: up(768px) { … } will return @media (min-width: 768px) { … }
//
// Parameters are:
// * $breakpoint-value: the breakpoint value (in pixels)
@mixin up($breakpoint-value) {
    @if $breakpoint-value > 0 {
        @media (min-width: $breakpoint-value) {
            @content;
        }
    } @else {
        @content;
    }
}

// Mixin to get the max-width media query for a breakpoint value.
//
// Example: down(0) { … } will return …
// Example: down(768px) { … } will return @media (max-width: 767px) { … }
//
// Parameters are:
// * $breakpoint-value: the breakpoint value (in pixels)
@mixin down($breakpoint-value) {
    @if $breakpoint-value > 0 {
        @media (max-width: ($breakpoint-value - 1px)) {
            @content;
        }
    } @else {
        @content;
    }
}

// Function to get the breakpoint modifier as an infix or a suffix.
//
// Example: get-modifier('infix, 'mobile', 0) will return ''
// Example: get-modifier('infix', 'tablet', 768px) will return 'tablet--'
// Example: get-modifier('suffix', 'tablet', 768px) will return '-tablet'
//
// Parameters are:
// * modifier: [ infix | suffix ]
// * $name: the breakpoint/modifier name to return (e.g. 'tablet')
// * $breakpoint-value: the breakpoint value to decide by (in pixels)
@function get-modifier($modifier, $name, $breakpoint-value) {
    @if $breakpoint-value > 0 {
        @if $modifier == 'infix' {
            @return unquote($name + '--');
        }

        @return unquote('-' + $name);
    }

    @return '';
}
