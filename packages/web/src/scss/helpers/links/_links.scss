// 1. Reset button styles for individual link variants.
// 2. Generate link colors for all link states.
// 3. Links in headings always have the default decoration, even those with `.link-underlined`.
// 4. Allow link underline everywhere, except for headings in default state.
// 5. Allow link stretching over the closest element with `position: relative`.
// 6. Only links in headings have visited state.

@use 'sass:map';
@use '@tokens' as tokens;
@use '../../settings/cursors';
@use '../../settings/dictionaries' as dictionaries-settings;
@use '../../settings/links' as links-settings;
@use '../../tools/dictionaries';
@use '../../tools/links' as links-tools;

// 1.
@include dictionaries.prepare-button-links(dictionaries-settings.$action-link-colors);

// 2.
@include dictionaries.generate-link-colors(
    '.link',
    dictionaries-settings.$action-link-colors,
    tokens.$action-colors,
    (default, hover, active, disabled)
);

// stylelint-disable-next-line selector-no-qualifying-type -- Increase specificity to override button variant styles.
.link-disabled,
button.link-disabled {
    cursor: cursors.$disabled;
}

// 3.
[class*='typography-heading'] a {
    text-decoration: links-settings.$text-decoration-default;
}

// 4.
.link-underlined,
[class*='typography-heading'] a:hover,
[class*='typography-heading'] a:active {
    text-decoration: links-settings.$text-decoration-hover;
}

// 5.
.link-stretched {
    @include links-tools.stretch();
}

// 6.
[class*='typography-heading'] :visited {
    color: map.get(tokens.$action-colors, link-primary-visited);
}

// 6.
@include dictionaries.generate-link-colors(
    '[class*="typography-heading"] .link',
    dictionaries-settings.$text-colors,
    tokens.$action-colors,
    visited
);
