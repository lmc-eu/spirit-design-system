// 1. Get ready for card link overlay.
// 2. If there is a expanded CardMedia in a boxed vertical card, replace card padding with empty grid columns/rows.
// 3. Allow shrinking in grid layouts.
// 4. Make sure links and buttons are clickable.
// 5. Make text content selectable when there is a stretched CardLink.

@use '@tokens' as tokens;
@use '../../tools/breakpoint';
@use '../../tools/typography';
@use 'theme';

.Card {
    --#{tokens.$css-variable-prefix}card-padding: #{theme.$padding};

    @include typography.generate(theme.$typography);

    position: relative; // 1.
    display: grid;
    min-width: 0; // 3.
    color: theme.$color;

    @include breakpoint.up(tokens.$breakpoint-tablet) {
        --#{tokens.$css-variable-prefix}card-padding: #{theme.$padding-tablet};
    }
}

// 4., 5.
.Card:has(.CardLink) :where(a:not(.CardLink), button),
.Card:has(.CardLink):has(.CardBody--selectable) :where(p, ul, ol, dl) {
    position: relative;
    z-index: 1;
}

.Card--vertical {
    grid-template-rows: auto 1fr auto;
    grid-template-areas:
        'media'
        'body'
        'footer';
}

.Card--horizontal {
    grid-template-columns: auto 1fr;
    grid-template-rows: auto 1fr auto;
    grid-template-areas:
        'media logo'
        'media body'
        'media footer';
}

.Card--horizontalReversed {
    grid-template-columns: 1fr auto;
    grid-template-rows: auto 1fr auto;
    grid-template-areas:
        'logo media'
        'body media'
        'footer media';
}

:is(.Card--horizontal, .Card--horizontalReversed):has(.CardArtwork:not(:only-child), .CardMedia:not(:only-child)) {
    column-gap: theme.$gap;
}

.Card--boxed {
    border: theme.$border-width theme.$border-style theme.$border-color;
    border-radius: theme.$border-radius;
    background-color: theme.$background-color;

    &:has(.CardLink) {
        @media (hover: hover) {
            transition: box-shadow theme.$transition-duration theme.$transition-timing;

            &:hover {
                box-shadow: theme.$box-shadow-state-hover;
            }
        }
    }

    &:not(:has(.CardMedia--expanded)) {
        padding: var(--#{tokens.$css-variable-prefix}card-padding);
    }
}

.Card--boxed.Card--vertical {
    &:has(.CardMedia--expanded) {
        grid-template-columns:
            var(--#{tokens.$css-variable-prefix}card-padding)
            1fr
            var(--#{tokens.$css-variable-prefix}card-padding); // 2.

        grid-template-rows:
            var(--#{tokens.$css-variable-prefix}card-padding)
            auto
            1fr
            auto;
        grid-template-areas:
            'media media media'
            'media media media'
            '. body .'
            '. footer .';
    }

    &:has(.CardMedia:not(:only-child)) {
        padding-bottom: var(--#{tokens.$css-variable-prefix}card-padding);
    }
}

.Card--boxed.Card--horizontal {
    &:has(.CardMedia--expanded) {
        grid-template-columns: auto 1fr;
        grid-template-rows:
            var(--#{tokens.$css-variable-prefix}card-padding)
            auto
            1fr
            auto
            var(--#{tokens.$css-variable-prefix}card-padding); // 2.

        grid-template-areas:
            'media .'
            'media logo'
            'media body'
            'media footer'
            'media .';
    }

    &:has(.CardMedia:not(:only-child)) {
        padding-right: var(--#{tokens.$css-variable-prefix}card-padding);
    }
}

.Card--boxed.Card--horizontalReversed {
    &:has(.CardMedia--expanded) {
        grid-template-columns: 1fr auto;
        grid-template-rows:
            var(--#{tokens.$css-variable-prefix}card-padding)
            auto
            1fr
            auto
            var(--#{tokens.$css-variable-prefix}card-padding); // 2.

        grid-template-areas:
            '. media'
            'logo media'
            'body media'
            'footer media'
            '. media';
    }

    &:has(.CardMedia:not(:only-child)) {
        padding-left: var(--#{tokens.$css-variable-prefix}card-padding);
    }
}
