@use 'sass:map';
@use '@tokens' as tokens;
@use '../../settings/dictionaries';
@use '../../settings/form-fields' as form-fields-settings;
@use '../../tools/tokens' as tokens-tools;

$border-width: tokens.$border-width-100;
$border-style: solid;
$border-radius: tokens.$radius-full;
$breakpoints: tokens.$breakpoints;

$disabled-color: tokens.$disabled-content;
$disabled-border-color: tokens.$disabled-border;
$disabled-background-color: tokens.$disabled-background;

$color-component-button-dictionary: (
    component-button: map.keys(map.get(tokens.$component-colors, button)),
);

$color-emotion-dictionary: (
    emotion: dictionaries.$emotion-colors,
);

$color-action-button-config: (
    color: 'content',
    border-color: 'border',
    background-color: 'state-default',
    background-color-state-hover: 'state-hover',
    background-color-state-active: 'state-active',
);

$color-emotion-config: (
    color: 'content-subtle',
    border-color: 'border-basic',
    background-color: 'state-default',
    background-color-state-hover: 'state-hover',
    background-color-state-active: 'state-active',
);

$loading-color-config: (
    color: 'content',
);

$loading-color-dictionary-overrides: (
    emotion: (
        color: 'content-subtle',
        border-color: 'border-basic',
    ),
);

$size-dictionary: dictionaries.$size;
$size-config: map.deep-merge(
    form-fields-settings.$box-field-size-config,
    (
        small: map.merge(
                (
                    padding-x: calc(#{tokens.$space-700} - #{tokens.$border-width-100}),
                    padding-y: calc(#{tokens.$space-300} - #{tokens.$border-width-100}),
                    typography: tokens.$body-small-semibold,
                ),
                tokens-tools.generate-responsive-map(
                    $property: 'border-radius',
                    $size: 'small',
                    $variable-prefix: 'button',
                    $token-name: 'radius',
                    $fallback: $border-radius,
                )
            ),
        medium: map.merge(
                (
                    padding-x: calc(#{tokens.$space-900} - #{tokens.$border-width-100}),
                    padding-y: calc(#{tokens.$space-500} - #{tokens.$border-width-100}),
                    typography: tokens.$body-small-semibold,
                ),
                tokens-tools.generate-responsive-map(
                    $property: 'border-radius',
                    $size: 'medium',
                    $variable-prefix: 'button',
                    $token-name: 'radius',
                    $fallback: $border-radius,
                )
            ),
        large: map.merge(
                (
                    padding-x: calc(#{tokens.$space-900} - #{tokens.$border-width-100}),
                    padding-y: calc(#{tokens.$space-500} - #{tokens.$border-width-100}),
                    typography: tokens.$body-medium-semibold,
                ),
                tokens-tools.generate-responsive-map(
                    $property: 'border-radius',
                    $size: 'large',
                    $variable-prefix: 'button',
                    $token-name: 'radius',
                    $fallback: $border-radius,
                )
            ),
    )
);
