// 1. Use an `::after` pseudo-element to create a decorative border.

@use '../../tools/breakpoint';
@use '../../tools/reset';
@use '../../tools/typography';
@use 'theme';

.Header {
    @include typography.generate(theme.$header-typography);

    display: flex;
    flex: none;
    gap: theme.$header-gap;
    align-items: center;
    height: 68px;
    padding-inline: theme.$header-padding-x;
    background-color: transparent;
}

.Header__actions {
    display: flex;
    flex: none;
    gap: theme.$header-actions-gap-mobile;
    align-items: center;
}

.Header__actions--mobileOnly {
    margin-inline-start: auto;
}

.Header__actions--desktopOnly {
    display: none;
}

@include breakpoint.up(theme.$header-breakpoint) {
    .Header__actions {
        gap: theme.$header-actions-gap-desktop;
        align-self: stretch;
    }

    .Header__actions--mobileOnly {
        display: none;
    }

    .Header__actions--desktopOnly {
        display: flex;
    }

    .Header__actions--secondary {
        margin-inline-start: auto;
    }
}

.Header__nav {
    display: flex;
    align-self: stretch;
    list-style: none;
}

.Header__navItem {
    display: flex;
}

// stylelint-disable-next-line selector-no-qualifying-type -- Safely reset links with the semantics of a button.
:where(button.Header__link) {
    @include reset.button();
}

.Header__link {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: flex-start;
    width: 100%;
    padding: theme.$header-nav-item-padding-y theme.$header-nav-item-padding-x;
    color: theme.$header-nav-link-color;
    background-color: theme.$header-nav-link-background-color;
    transition-property: color, background-color;
    transition-duration: theme.$header-nav-link-transition-duration;

    // 1.
    &::after {
        content: '';
        position: absolute;
        top: auto;
        right: 0;
        bottom: 0;
        left: 0;
        width: auto;
        height: theme.$header-nav-link-current-border-thickness;
        background-color: theme.$header-nav-link-current-border-color;
        transform: scaleY(0);
        transform-origin: bottom center;
    }

    &:hover {
        color: theme.$header-nav-link-color-hover;
        background-color: theme.$header-nav-link-background-color-hover;
    }

    &:active {
        color: theme.$header-nav-link-color-active;
        background-color: theme.$header-nav-link-background-color-active;
    }

    @media (prefers-reduced-motion: no-preference) {
        // 1.
        &::after {
            transition: transform ease-out theme.$header-nav-link-transition-duration;
        }
    }
}

.Header__link--current {
    color: theme.$header-nav-link-color-current;
    background-color: theme.$header-nav-link-background-color-current;

    // 1.
    &::after {
        transform: scaleY(1);
    }

    &:hover,
    &:active {
        color: theme.$header-nav-link-color-current;
        background-color: theme.$header-nav-link-background-color-current;
    }
}

.Header--simple {
    justify-content: center;
    height: 60px;
}

.Header--inverted {
    color: theme.$header-inverted-color;
    background-color: theme.$header-inverted-background-color;
}
