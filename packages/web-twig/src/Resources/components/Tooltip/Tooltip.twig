{# API #}
{%- set props = props | default([]) -%}
{%- set _closeLabel = props.closeLabel | default('Close') -%}
{%- set _id = props.id | default(null) -%}
{%- set _isDismissible = props.isDismissible | default(false) -%}
{%- set _placement = props.placement | default('bottom') -%}

{# Class names #}
{%- set _arrowClassName = _spiritClassPrefix ~ 'Tooltip__arrow' -%}
{%- set _closeClassName = _spiritClassPrefix ~ 'Tooltip__close' -%}
{%- set _rootClassName = _spiritClassPrefix ~ 'Tooltip' -%}
{%- set _rootDismissibleClassName = _isDismissible == 'true' ? _spiritClassPrefix ~ 'Tooltip--dismissible' : null -%}

{# Attributes #}
{%- set _idAttr = _id ? 'id="' ~ _id | escape('html_attr') ~ '"' : null -%}
{%- set _ariaControlsAttr = _id ? 'aria-controls="' ~ _id | escape('html_attr') ~ '"' : null -%}
{%- set _dataPlacementAttr = _placement ? 'data-spirit-placement="' ~ _placement | escape('html_attr') ~ '"' : null -%}
{%- set _dataTargetAttr = _id ? 'data-spirit-target="#' ~ _id | escape('html_attr') ~ '"' : null -%}

{# Miscellaneous #}
{%- set _styleProps = useStyleProps(props) -%}
{%- set _classNames = [ _rootClassName, _rootDismissibleClassName, _styleProps.className ] -%}
{%- set _mainPropsWithoutReservedAttributes = props | filter((value, prop) => prop not in ['id', 'data-spirit-placement']) -%}

{# Deprecations #}
{% set deprecatedPlacements = {
    'top-left': 'top-start',
    'top-right': 'top-end',
    'right-top': 'right-start',
    'right-bottom': 'right-end',
    'bottom-left': 'bottom-start',
    'bottom-right': 'bottom-end',
    'left-top': 'left-start',
    'left-bottom': 'left-end',
} %}

{% if deprecatedPlacements[_placement] is defined %}
    {% deprecated 'Tooltip: Non-flow-relative values (eg. "' ~ _placement ~ '") in "placement" property are deprecated and will be removed in the next major version. Use flow-relative (eg. "' ~ deprecatedPlacements[_placement] ~ '") instead.' %}
{% endif %}

<div
    {{ mainProps(_mainPropsWithoutReservedAttributes) }}
    {{ styleProp(_styleProps) }}
    {{ classProp(_classNames) }}
    {{ _idAttr | raw }}
    {{ _dataPlacementAttr | raw }}
>
    {% block content %}{% endblock %}
    {% if _isDismissible == 'true' %}
        <button
            type="button"
            class="{{ _closeClassName }}"
            data-spirit-dismiss="tooltip"
            {{ _ariaControlsAttr | raw }}
            {{ _dataTargetAttr | raw }}
            aria-expanded="true"
        >
            <Icon name="close" aria-hidden="true" />
            <VisuallyHidden>{{ _closeLabel }}</VisuallyHidden>
        </button>
    {% endif %}
    <span class="{{ _arrowClassName }}" data-spirit-element="arrow"></span>
</div>
