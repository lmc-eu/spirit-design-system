{# API #}
{%- set props = props | default([]) -%}
{%- set _fullWidthMode = props.fullWidthMode | default(null)  -%}
{%- set _elementType = props.elementType | default('div') -%}
{%- set _placement = props.placement | default('bottom-start') -%}

{# Class names #}
{%- set _rootClassName = _spiritClassPrefix ~ 'Dropdown' -%}

{# Attributes #}
{%- set _dataFullWidthModeAttr = _fullWidthMode ? 'data-spirit-fullwidthmode="' ~ _fullWidthMode | escape('html_attr') ~ '"' : null -%}
{%- set _dataPlacementAttr = _placement ? 'data-spirit-placement="' ~ _placement | escape('html_attr') ~ '"' : null -%}

{# Miscellaneous #}
{%- set _styleProps = useStyleProps(props) -%}
{%- set _classNames = [ _rootClassName, _styleProps.className ] -%}
{%- set _mainPropsWithoutReservedAttributes = props | filter((value, prop) => prop not in ['data-spirit-placement']) -%}

{# Deprecations #}
{% set deprecatedPlacements = {
    'top-left': 'top-start',
    'top-right': 'top-end',
    'right-top': 'right-start',
    'right-bottom': 'right-end',
    'bottom-left': 'bottom-start',
    'bottom-right': 'bottom-end',
    'left-top': 'left-start',
    'left-bottom': 'left-end',
} %}

{% if deprecatedPlacements[_placement] is defined %}
    {% deprecated 'Dropdown: Non-flow-relative values (e.g. "' ~ _placement ~ '") of the "placement" property are deprecated and will be removed in the next major version. Use a flow-relative placement (e.g. "' ~ deprecatedPlacements[_placement] ~ '") instead.' %}
{% endif %}

<{{ _elementType }}
    {{ mainProps(_mainPropsWithoutReservedAttributes) }}
    {{ styleProp(_styleProps) }}
    {{ classProp(_classNames) }}
    {{ _dataFullWidthModeAttr | raw }}
    {{ _dataPlacementAttr | raw }}
>
    {%- block content %}{% endblock -%}
</{{ _elementType }}>
