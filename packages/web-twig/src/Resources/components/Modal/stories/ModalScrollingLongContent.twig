<Button data-spirit-toggle="modal" data-spirit-target="#example-long-content">
    Open Modal with Long Content
</Button>

<Modal id="example-long-content" titleId="example-long-content-title">
    <ModalDialog>
        <ModalHeader modalId="example-long-content" titleId="example-long-content-title">
            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquam at excepturi laudantium magnam mollitia perferendis reprehenderit, voluptate. Cum delectus dicta
        </ModalHeader>
        <ModalBody>

            <!-- Content: start -->
            {%- for i in range(1,9) -%}
                <p>
                    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquam at excepturi laudantium magnam mollitia
                    perferendis reprehenderit, voluptate. Cum delectus dicta ducimus eligendi excepturi natus perferendis
                    provident unde. Eveniet, iste, molestiae?
                </p>
            {%- endfor -%}
            <!-- Content: end -->

        </ModalBody>
        <ModalFooter>
            <Button
                data-spirit-dismiss="modal"
                data-spirit-target="#example-long-content"
            >
                Primary action
            </Button>
            <Button
                color="secondary"
                data-spirit-dismiss="modal"
                data-spirit-target="#example-long-content"
            >
                Secondary action
            </Button>
        </ModalFooter>
    </ModalDialog>
</Modal>

<Button data-spirit-toggle="modal" data-spirit-target="#example-scrolling-modal">
    Open Modal with Scrolling Inside
</Button>

<Modal id="example-scrolling-modal" titleId="example-scrolling-modal-title">
    <ModalDialog isScrollable>
        <ModalHeader modalId="example-scrolling-modal" titleId="example-scrolling-modal-title">
            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquam at excepturi laudantium magnam mollitia
            perferendis reprehenderit, voluptate. Cum delectus dicta
        </ModalHeader>
        <ModalBody>

            <!-- Content: start -->
            <p>
                Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquam at excepturi laudantium magnam mollitia
                perferendis reprehenderit, voluptate. Cum delectus dicta ducimus eligendi excepturi natus perferendis
                provident unde. Eveniet, iste, molestiae?
            </p>
            <p>
                Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquam at excepturi laudantium magnam mollitia
                perferendis reprehenderit, voluptate. Cum delectus dicta ducimus eligendi excepturi natus perferendis
                provident unde. Eveniet, iste, molestiae?
            </p>
            <p style="margin-bottom: 100vh">
                Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquam at excepturi laudantium magnam mollitia
                perferendis reprehenderit, voluptate. Cum delectus dicta ducimus eligendi excepturi natus perferendis
                provident unde. Eveniet, iste, molestiae?
            </p>
            <p>
                Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquam at excepturi laudantium magnam mollitia
                perferendis reprehenderit, voluptate. Cum delectus dicta ducimus eligendi excepturi natus perferendis
                provident unde. Eveniet, iste, molestiae?
            </p>
            <!-- Content: end -->

        </ModalBody>
        <ModalFooter>
            <Button
                data-spirit-dismiss="modal"
                data-spirit-target="#example-scrolling-modal"
            >
                Primary action
            </Button>
            <Button
                color="secondary"
                data-spirit-dismiss="modal"
                data-spirit-target="#example-scrolling-modal"
            >
                Secondary action
            </Button>
        </ModalFooter>
    </ModalDialog>
</Modal>

<Button data-spirit-toggle="modal" data-spirit-target="#example-scroll-view">
    Open Modal with ScrollView
</Button>

<Modal id="example-scroll-view" titleId="example-scroll-view-title">
    <ModalDialog isScrollable>
        <ModalHeader modalId="example-scroll-view" titleId="example-scroll-view-title">
            Modal with ScrollView
        </ModalHeader>
        <ScrollView data-spirit-toggle="scrollView" overflowDecorators="borders">
            <ModalBody>

                <!-- Content: start -->
                <p>
                    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquam at excepturi laudantium magnam mollitia
                    perferendis reprehenderit, voluptate. Cum delectus dicta ducimus eligendi excepturi natus perferendis
                    provident unde. Eveniet, iste, molestiae?
                </p>
                <p>
                    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquam at excepturi laudantium magnam mollitia
                    perferendis reprehenderit, voluptate. Cum delectus dicta ducimus eligendi excepturi natus perferendis
                    provident unde. Eveniet, iste, molestiae?
                </p>
                <p>
                    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquam at excepturi laudantium magnam mollitia
                    perferendis reprehenderit, voluptate. Cum delectus dicta ducimus eligendi excepturi natus perferendis
                    provident unde. Eveniet, iste, molestiae?
                </p>
                <p>
                    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquam at excepturi laudantium magnam mollitia
                    perferendis reprehenderit, voluptate. Cum delectus dicta ducimus eligendi excepturi natus perferendis
                    provident unde. Eveniet, iste, molestiae?
                </p>
                <p>
                    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquam at excepturi laudantium magnam mollitia
                    perferendis reprehenderit, voluptate. Cum delectus dicta ducimus eligendi excepturi natus perferendis
                    provident unde. Eveniet, iste, molestiae?
                </p>
                <p>
                    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquam at excepturi laudantium magnam mollitia
                    perferendis reprehenderit, voluptate. Cum delectus dicta ducimus eligendi excepturi natus perferendis
                    provident unde. Eveniet, iste, molestiae?
                </p>
                <p>
                    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquam at excepturi laudantium magnam mollitia
                    perferendis reprehenderit, voluptate. Cum delectus dicta ducimus eligendi excepturi natus perferendis
                    provident unde. Eveniet, iste, molestiae?
                </p>
                <p>
                    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquam at excepturi laudantium magnam mollitia
                    perferendis reprehenderit, voluptate. Cum delectus dicta ducimus eligendi excepturi natus perferendis
                    provident unde. Eveniet, iste, molestiae?
                </p>
                <!-- Content: end -->

            </ModalBody>
        </ScrollView>
        <ModalFooter>
            <Button
                data-spirit-dismiss="modal"
                data-spirit-target="#example-scroll-view"
            >
                Primary action
            </Button>
            <Button
                color="secondary"
                data-spirit-dismiss="modal"
                data-spirit-target="#example-scroll-view"
            >
                Secondary action
            </Button>
        </ModalFooter>
    </ModalDialog>
</Modal>

<Button data-spirit-toggle="modal" data-spirit-target="#example-custom-height">
    Open Modal with Custom Height
</Button>

<Modal id="example-custom-height" titleId="example-custom-height-title">
    <ModalDialog
        isExpandedOnMobile={ false }
        isScrollable
        height="{{ { mobile: '400px', tablet: '500px', desktop: '600px' } }}"
    >
        <ModalHeader modalId="example-custom-height" titleId="example-custom-height-title">
            Modal with Custom Height
        </ModalHeader>
        <ModalBody>

            <!-- Content: start -->
            <!-- Modal custom height demo: start -->
            <script>
                const toggleCustomHeight = (event, selector, breakpoint) => {
                    const isCustomHeightEnabled = event.target.checked;
                    const breakpointSuffix = breakpoint === 'mobile' ? '' : `-${breakpoint}`;

                    const modalElement = document.querySelector(selector);
                    const modalHeightInputElement = document.querySelector(`#custom-height-${breakpoint}`);
                    const modalHeightValueElement = document.querySelector(`#custom-height-${breakpoint}-value`);
                    const modalMaxHeightInputElement = document.querySelector(`#custom-max-height-${breakpoint}`);
                    const modalMaxHeightValueElement = document.querySelector(`#custom-max-height-${breakpoint}-value`);

                    if (isCustomHeightEnabled) {
                        modalElement.style.setProperty(`--modal-dialog-height${breakpointSuffix}`, `${modalHeightInputElement.value}px`);
                        modalElement.style.setProperty(`--modal-dialog-max-height${breakpointSuffix}`, `${modalMaxHeightInputElement.value}px`);
                        modalHeightInputElement.disabled = false;
                        modalHeightValueElement.textContent = `${modalHeightInputElement.value} px`;
                        modalMaxHeightInputElement.disabled = false;
                        modalMaxHeightValueElement.textContent = `${modalMaxHeightInputElement.value} px`;
                    } else {
                        modalElement.style.setProperty(`--modal-dialog-height${breakpointSuffix}`, 'unset');
                        modalElement.style.setProperty(`--modal-dialog-max-height${breakpointSuffix}`, 'unset');
                        modalHeightInputElement.disabled = true;
                        modalHeightValueElement.textContent = '—';
                        modalMaxHeightInputElement.disabled = true;
                        modalMaxHeightValueElement.textContent = '—';
                    }
                };

                const setModalHeight = (event, selector, breakpoint) => {
                    const breakpointSuffix = breakpoint === 'mobile' ? '' : `-${breakpoint}`;
                    const modalElement = document.querySelector(selector);
                    const modalHeightValueElement = document.querySelector(`#custom-height-${breakpoint}-value`);

                    modalElement.style.setProperty(`--modal-dialog-height${breakpointSuffix}`, `${event.target.value}px`);
                    modalHeightValueElement.textContent = `${event.target.value} px`;
                };

                const setModalMaxHeight = (event, selector, breakpoint) => {
                    const breakpointSuffix = breakpoint === 'mobile' ? '' : `-${breakpoint}`;
                    const modalElement = document.querySelector(selector);
                    const modalHeightValueElement = document.querySelector(`#custom-max-height-${breakpoint}-value`);

                    modalElement.style.setProperty(`--modal-dialog-max-height${breakpointSuffix}`, `${event.target.value}px`);
                    modalHeightValueElement.textContent = `${event.target.value} px`;
                };
            </script>
            <form>
                {%- set breakpointControls = {
                    mobile: { height: 400, maxHeight: 600, marginBottom: 'space-800', className: ''},
                    tablet: { height: 500, maxHeight: 600, marginBottom: { tablet: 'space-800' }, className: 'd-none d-tablet-grid'},
                    desktop: { height: 600, maxHeight: 600, marginBottom: '', className: 'd-none d-desktop-grid'},
                } -%}
                {%- for key, value in breakpointControls -%}
                    <Stack elementType="fieldset" hasSpacing marginBottom="{{ value.marginBottom }}" UNSAFE_className="{{ value.className }}" UNSAFE_style="border: 0;">
                        <legend hidden>{{ key | capitalize }}</legend>
                        <Checkbox
                            id="{{ 'custom-height-' ~ key ~ '-enabled' }}"
                            onchange="{{ 'toggleCustomHeight(event, \'#example-custom-height > .ModalDialog\', \'' ~  key ~ '\')' }}"
                            isChecked
                            autocomplete="off"
                            label="{{ key | capitalize }}"
                        />
                        <Grid UNSAFE_style="column-gap: var(--spirit-space-600)">
                            <label for="{{ 'custom-height-' ~ key }}" class="GridItem" style="--grid-item-column-start: 1; --grid-item-column-end: 6; --grid-item-column-end-tablet: 4;">
                                Height
                            </label>
                            <GridItem elementType="span" id="{{ 'custom-height-' ~ key ~ '-value' }}" columnStart="{{ { mobile: 6, tablet: 4 } }}" columnEnd="{{ { mobile: 13, tablet: 7 } }}">
                                {{ value.height }} px
                            </GridItem>
                            <input
                                type="range"
                                id="{{ 'custom-height-' ~ key }}"
                                class="GridItem"
                                style="--grid-item-column-start: 1; --grid-item-column-end: 13; --grid-item-column-start-tablet: 7;"
                                onchange="{{ 'setModalHeight(event, \'#example-custom-height > .ModalDialog\', \'' ~  key ~ '\')' }}"
                                min="200"
                                max="1000"
                                step="100"
                                value="{{ value.height }}"
                                autocomplete="off"
                            />
                        </Grid>
                        <Grid UNSAFE_style="column-gap: var(--spirit-space-600)">
                            <label for="{{ 'custom-max-height-' ~ key }}" class="GridItem" style="--grid-item-column-start: 1; --grid-item-column-end: 6; --grid-item-column-end-tablet: 4;">
                                Max height
                            </label>
                            <GridItem elementType="span" id="{{ 'custom-max-height-' ~ key ~ '-value' }}" columnStart="{{ { mobile: 6, tablet: 4 } }}" columnEnd="{{ { mobile: 13, tablet: 7 } }}">
                                {{ value.maxHeight }} px
                            </GridItem>
                            <input
                                type="range"
                                id="{{ 'custom-max-height-' ~ key }}"
                                class="GridItem"
                                style="--grid-item-column-start: 1; --grid-item-column-end: 13; --grid-item-column-start-tablet: 7;"
                                onchange="{{ 'setModalMaxHeight(event, \'#example-custom-height > .ModalDialog\', \'' ~  key ~ '\')' }}"
                                min="200"
                                max="1000"
                                step="100"
                                value="{{ value.maxHeight }}"
                                autocomplete="off"
                            />
                        </Grid>
                    </Stack>
                {%- endfor -%}
            </form>
            <!-- Modal custom height demo: end -->
            <!-- Content: end -->

        </ModalBody>
        <ModalFooter>
            <Button type="submit">
                Primary action
            </Button>
            <Button
                color="secondary"
                data-spirit-dismiss="modal"
                data-spirit-target="#example-custom-height"
            >
                Secondary action
            </Button>
        </ModalFooter>
    </ModalDialog>
</Modal>
