import fs from 'fs';
import path from 'path';
import { Token, TokenGroup } from '@supernovaio/sdk-exporters';
import { generateFiles } from '../fileGenerator';
import { exampleMockedGroups, exampleMockedTokens } from '../../formatters/__fixtures__/mockedExampleTokens';

const mockedExpectedResult = fs.readFileSync(
  path.join(__dirname, '../../formatters/__fixtures__/exampleFileContent.scss'),
  'utf-8',
);
const mappedTokens: Map<string, Token> = new Map([]);
const tokenGroups: Array<TokenGroup> = exampleMockedGroups;
const emptyFile = `/* This file was generated by Supernova, don't change manually */\n\n`;

describe('fileGenerator', () => {
  it('should generate files', () => {
    const tokens = Array.from(exampleMockedTokens.values());
    const files = generateFiles(tokens, mappedTokens, tokenGroups);

    expect(files).toStrictEqual([
      {
        fileName: '_borders.scss',
        content: emptyFile,
      },
      { fileName: '_other.scss', content: mockedExpectedResult },
      { fileName: '_radii.scss', content: emptyFile },
      { fileName: '_spacing.scss', content: emptyFile },
    ]);
  });
});
