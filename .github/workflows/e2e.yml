name: End-to-end Tests
on:
  push:
    branches: [main]
  pull_request:
    types: [labeled]

env:
  NODE_ENV: testing

jobs:
  haslabel:
    name: analyse labels
    runs-on: ubuntu-latest
    outputs:
      e2e: ${{ steps.haslabel.outputs.labeled-run-visual-tests }}
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v4
      - name: Labeled to e2e
        id: haslabel
        uses: DanielTamkin/HasLabel@v1.0.4
        with:
          contains: 'run-visual-tests'

  test:
    needs: hasLabel
    if: ${{ needs.haslabel.outputs.e2e || (github.ref == 'refs/heads/main') }}
    runs-on: ubuntu-22.04
    container:
      image: mcr.microsoft.com/playwright:v1.40.1-jammy
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Install dependencies
        uses: bahmutov/npm-install@v1.8.36
        with:
          useRollingCache: true

      # Wait for the Netlify preview URL to be ready
      - name: Wait for Netlify Deploy
        uses: mmazzarolo/wait-for-netlify-action@8a7a8d8cf5b313c916d805b76cc498380062d268
        id: get-netlify-preview-url
        continue-on-error: true
        with:
          site_id: ${{ secrets.NETLIFY_SITE_SPIRIT_DESIGN_SYSTEM }}
          max_timeout: 1
        env:
          NETLIFY_TOKEN: ${{ secrets.NETLIFY_TOKEN }}
      # The Netlify preview URL is now available
      # as `steps.get-netlify-preview-url.outputs.url`

      - name: Run Playwright tests
        run: yarn playwright test
        env:
          HOME: /root
          WEBSITE_URL: ${{ steps.get-netlify-preview-url.outputs.url }}

      - name: Notify slack if tests fail
        id: Slack
        uses: slackapi/slack-github-action@v1.25.0
        if: ${{ failure() }}
        with:
          channel-id: 'C050BHERJTW' # Slack channel-id of #spirit-design-system-notifications_en
          payload: |
            {
              "attachments": [
                {
                  "color": "#ff0000",
                  "blocks": [
                    {
                      "type": "header",
                      "text": {
                        "type": "plain_text",
                        "text": ":boom: GitHub Action failed",
                        "emoji": true
                      }
                    },
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "*Pull request title:* `${{ github.event.pull_request.title }}`"
                      }
                    },
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "*E2E tests result:* `${{ job.status }}`"
                      }
                    },
                    {
                      "type": "actions",
                      "elements": [
                        {
                          "type": "button",
                          "text": {
                            "type": "plain_text",
                            "text": ":github: Open pull request"
                          },
                          "url": "${{ github.event.pull_request.html_url }}"
                        },
                        {
                          "type": "button",
                          "text": {
                            "type": "plain_text",
                            "text": ":github: Open failed github action"
                          },
                          "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_NOTIFICATIONS_TOKEN }} # Webhook from Slack Application
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Comment PR with artifact URL
        if: failure()
        uses: actions/github-script@v5
        with:
          script: |
            const artifactName = 'playwright-report';
            const artifactUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}/artifacts/${artifactName}`;
            const issue_number = context.issue.number;
            const repo = context.repo.repo;
            const owner = context.repo.owner;

            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number,
              body: `Here is the URL of the uploaded artifact: ${artifactUrl}`
            });
