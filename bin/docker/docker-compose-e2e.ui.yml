name: e2e-tests

include:
  - ./docker-compose-e2e.volumes.yml

services:
  playwright-tests-ui:
    image: mcr.microsoft.com/playwright:v${PLAYWRIGHT_VERSION}-${UBUNTU_VERSION}
    ipc: host
    extra_hosts:
      # allows network calls between docker container and the host.
      # See https://forums.docker.com/t/how-to-reach-localhost-on-host-from-docker-container/113321
      - host.docker.internal:host-gateway
    working_dir: /work
    entrypoint: /bin/bash
    command:
      - -c
      - |
        corepack enable
        corepack install
        ${NPM_INSTALL_COMMAND:-yarn install}
        yarn test:e2e --ui-port=${UI_PORT:-43008} --ui-host=0.0.0.0 ${PLAYWRIGHT_TEST_OPTIONS:-}
    volumes:
      - ${WORKING_DIRECTORY}:/work/
      - npm-cache:/root/.yarn/cache
      # exclude node_modules from the mounted /app dir.
      # See https://www.howtogeek.com/devops/how-to-mount-a-docker-volume-while-excluding-a-subdirectory/
      - node-modules:/work/node_modules
    ports:
      - ${UI_PORT:-43008}:${UI_PORT:-43008}
    stop_grace_period: 0s
    environment:
      CI: ${CI:-false}
      USE_DOCKER_HOST_WEBSERVER: ${USE_DOCKER_HOST_WEBSERVER:-false}
      FILE_CHANGES_DETECTION_SUPPORTED: ${FILE_CHANGES_DETECTION_SUPPORTED:-false}
      # setting CHOKIDAR_USEPOLLING env variable might be required to get the Playwright UI
      # to automatically refresh when tests are updated/added/removed.
      # For more info see https://github.com/microsoft/playwright/issues/29785
      CHOKIDAR_USEPOLLING: ${CHOKIDAR_USEPOLLING:-true}
    healthcheck:
      test: wget --no-cache --spider http://localhost:${UI_PORT:-43008}
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 1m
      start_interval: 5s
